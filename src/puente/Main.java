/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package puente;

import java.util.ArrayList;

/**
 *
 * @author David Mencos
 */
public class Main extends javax.swing.JFrame {

    // Referencia estatica al GUI
    static Main gui = new Main();
    
    // Numero m√°ximo de carros que pueden usar el puente simultaneamente
    public static int MAX_CARROS = 3;
    
    // Contador de los identificadores de cada carro
    int currentId = 0;
    
    public int getCurrentId() {
        return currentId;
    }

    public void setCurrentId(int currentId) {
        this.currentId = currentId;
    }
    
    // Vectores para almacenar los carros en su respectivo lado y en el puente
    ArrayList<Carro> vectorNorte = new ArrayList<Carro>();
    ArrayList<Carro> vectorSur = new ArrayList<Carro>();
    ArrayList<Carro> vectorPuente = new ArrayList<Carro>();
    
    public void agregaCarroNorte(Carro carro){
        this.vectorNorte.add(carro);
    }
    
    public void eliminaCarroNorte(Carro carro){
        this.vectorNorte.remove(carro);
    }
    
    public ArrayList<Carro> getCarrosNorte(){
        return this.vectorNorte;
    }
    
    public void agregaCarroSur(Carro carro){
        this.vectorSur.add(carro);
    }
    
    public void eliminaCarroSur(Carro carro){
        this.vectorSur.remove(carro);
    }
    
    public ArrayList<Carro> getCarrosSur(){
        return this.vectorSur;
    }
    
    public void agregarCarroPuente(Carro carro){
        this.vectorPuente.add(carro);
    }
    
    public void eliminarCarroPuente(Carro carro){
        this.vectorPuente.remove(carro);
    }
    
    public ArrayList<Carro> getCarrosPuente(){
        return this.vectorPuente;
    }
    
    public void actualizaCarrosNorte(){
        String cadena = "";
        for(Carro car : this.vectorNorte){
            cadena += String.format("  C[%s]", car.getId());
        }
        this.lblCarrosNorte.setText(cadena);
    }
    
    public void actualizaCarrosSur(){
        String cadena = "";
        for(Carro car : this.vectorSur){
            cadena += String.format("C[%s]  ", car.getId());
        }
        this.lblCarrosSur.setText(cadena);
    }
    
    public void actualizaCarrosPuente(){
        String cadena = "";
        for(Carro car : this.vectorPuente){
            cadena += String.format("C[%s]  ", car.getId());
        }
        this.lblCarrosPuente.setText(cadena);
    }
    
    // Indica la direccion a la que se direigen los carros
    // 1 - Hacia arriba (Turno de Carros Sur)
    // 0 - Hacia abajo  (Turno de Carros Norte)
    private int direccionActual = 1;
    
    public int getDireccionActual(){
        return this.direccionActual;
    }
    
    public void setDireccionActual(int direccion){
        this.direccionActual = direccion;
    }
    
    // Flags que indican si es posible viajar al norte o al sur
    private boolean accesoNorte = true;
    private boolean accesoSur = false;
    
    public boolean getAccesoNorte(){
        return this.accesoNorte;
    }
    
    public void setAccesoNorte(boolean flag){
        this.accesoNorte = flag;
    }
    
    public boolean getAccesoSur(){
        return this.accesoSur;
    }
    
    public void setAccesoSur(boolean flag){
        this.accesoSur = flag;
    }
    
    public void cambiarNumeroCarrosPuente(Carro carro){
        this.lblCarrosPuente.setText(this.lblCarrosPuente.getText() + "  C[" + carro.getId() + "]");
    }
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCarrosNorte = new javax.swing.JLabel();
        lblCarrosSur = new javax.swing.JLabel();
        lblCarrosPuente = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(600, 419));
        setResizable(false);

        lblCarrosNorte.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCarrosNorte.setText(" ");

        lblCarrosSur.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCarrosSur.setText(" ");

        lblCarrosPuente.setBackground(new java.awt.Color(0, 204, 51));
        lblCarrosPuente.setForeground(new java.awt.Color(255, 255, 255));
        lblCarrosPuente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCarrosPuente.setText(" ");
        lblCarrosPuente.setOpaque(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/carroNorte.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/carroSur.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCarrosNorte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblCarrosPuente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblCarrosSur, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarrosNorte)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114)
                .addComponent(lblCarrosPuente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCarrosSur, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblCarrosNorte;
    private javax.swing.JLabel lblCarrosPuente;
    private javax.swing.JLabel lblCarrosSur;
    // End of variables declaration//GEN-END:variables
}
